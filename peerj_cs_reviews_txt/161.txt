Review History for An integrated platform for intuitive mathematical programming modeling using LaTeX [PeerJ]
PeerJ Computer Science PeerJ – the Journal of Life & Environmental Sciences PeerJ Computer Science PeerJ Physical Chemistry PeerJ Organic Chemistry PeerJ Inorganic Chemistry PeerJ Analytical Chemistry PeerJ Materials Science Visit PeerJ.org and get involved About PeerJ Journals Overview PeerJ Journals FAQ What we publish 5 Years publishing Solutions for authors Reputation High quality peer review Fast publishing Indexing and Impact Factor Global readership Feature comparison Reduced cost publishing Author feedback Early career researcher benefits Senior researcher benefits Open review (optional) Rebuttal letters Sections About the journal Sections Aquatic Biology Biochemistry, Biophysics and Molecular Biology Biodiversity and Conservation Bioinformatics and Genomics Brain and Cognition Ecology Environmental Science Microbiology Paleontology and Evolutionary Science Plant Biology Zoological Science About PeerJ Journals Overview PeerJ Journals FAQ What we publish 5 Years publishing Solutions for authors Reputation High quality peer review Fast publishing Indexing and Impact Factor Global readership Feature comparison Reduced cost publishing Author feedback Early career researcher benefits Senior researcher benefits Open review (optional) Rebuttal letters More Subjects Search articles Peer-reviewed Journals PeerJ (Life, Biological, Environmental and Health Sciences) PeerJ Computer Science PeerJ Physical Chemistry PeerJ Organic Chemistry PeerJ Inorganic Chemistry PeerJ Analytical Chemistry PeerJ Materials Science Preprints PeerJ Preprints Table of contents Table of Contents - current and archives PeerJ - Medicine articles PeerJ - Biology & Life science articles PeerJ - Environmental Science articles PeerJ - General bio (stats, legal, policy, edu) PeerJ Computer Science PeerJ Preprints Academic advisors Volunteer to review Collections Job listings Discussions Blog Institutional plans Reviews and awards Spread the word Who are we? Contact Login AUTHORS Peer Journals Overview Submission Guidelines Subject Areas Editorial Board Editorial Criteria Pricing General FAQ Computer Science FAQ Aims and Scope Author Interviews Policies and Procedures SUBMIT ARTICLE
Review History An integrated platform for intuitive mathematical programming modeling using LaTeX To increase transparency, PeerJ operates a system of 'optional signed reviews and history'. This takes two forms: (1) peer reviewers are encouraged, but not required, to provide their names (if they do so, then their profile page records the articles they have reviewed), and (2) authors are given the option of reproducing their entire peer review history alongside their published article (in which case the complete peer review process is provided, including revisions, rebuttal letters and editor decision letters). New to public reviews? Learn more about optional signed reviews and how to write a better rebuttal letter .
Summary
The initial submission of this article was received on June 3rd, 2018 and was peer-reviewed by 2 reviewers and the Academic Editor. The Academic Editor made their initial decision on June 26th, 2018. The first revision was submitted on July 19th, 2018 and was reviewed by 2 reviewers and the Academic Editor. The article was Accepted by the Academic Editor on August 6th, 2018.
label_version_1
Version 0.2 (accepted)
Marian Gheorghe
·
Aug 6, 2018
label_recommendation_1
·
Academic Editor
Accept
The reviewers are satisfied with your corrections,
label_author_1
Bruno Abreu Calfa ·
Aug 4, 2018
Basic reporting
label_br_1
No comment.
Experimental design
label_ed_1
No comment.
Validity of the findings
label_votf_1
No comment.
Comments for the author
label_cfta_1
The revised article, as well as the authors' comments, satisfactorily address my concerns from the first review. Cite this review as
Abreu Calfa B ( 2018 ) Peer Review #1 of "An integrated platform for intuitive mathematical programming modeling using LaTeX (v0.2)" . PeerJ Computer Science https://doi.org/10.7287/peerj-cs.161v0.2/reviews/1
label_author_2
Reviewer 2 ·
Aug 3, 2018
Basic reporting
label_br_2
The authors have addressed all the reviewers' comments in the revised manuscript.
Experimental design
label_ed_2
The authors have addressed all the reviewers' comments in the revised manuscript.
Validity of the findings
label_votf_2
The authors have addressed all the reviewers' comments in the revised manuscript.
Comments for the author
label_cfta_2
The authors have addressed all the reviewers' comments in the revised manuscript. Cite this review as
Anonymous Reviewer ( 2018 ) Peer Review #2 of "An integrated platform for intuitive mathematical programming modeling using LaTeX (v0.2)" . PeerJ Computer Science https://doi.org/10.7287/peerj-cs.161v0.2/reviews/2 Download Version 0.2 (PDF)
Download author's rebuttal letter
- submitted Jul 19, 2018
label_version_2
Version 0.1 (original submission)
Marian Gheorghe
·
Jun 26, 2018
label_recommendation_2
·
Academic Editor
Minor Revisions
The two reviewers have made some valid comments and raised a few issues that require your attention. Consequently, I would invite you to revise the paper taking into account their observations.
label_author_3
Bruno Abreu Calfa ·
Jun 16, 2018
Basic reporting
label_br_3
No comment (see reviewed PDF).
Experimental design
label_ed_3
No comment (see reviewed PDF).
Validity of the findings
label_votf_3
No comment (see reviewed PDF).
Download annotated manuscript Cite this review as
Abreu Calfa B ( 2018 ) Peer Review #1 of "An integrated platform for intuitive mathematical programming modeling using LaTeX (v0.1)" . PeerJ Computer Science https://doi.org/10.7287/peerj-cs.161v0.1/reviews/1
label_author_4
Reviewer 2 ·
Jun 25, 2018
Basic reporting
label_br_4
The paper is well-organized, and the use of the English language is generally good. In line 84, the authors state that “this is the first prototype workable scheme to address how LaTeX could be used as an input language to perform mathematical programming modeling.” This statement is not necessarily true. I encourage the authors to take a closer look at MOSAICmodeling (www.mosaic-modeling.de), which is a modeling and optimization framework based on a LaTeX-style syntax for inputting algebraic and differential equations. A comparison between MOSAICmodeling and the proposed framework would be helpful in terms of evaluating the advantages of this contribution. In lines 92-97, 22 references are listed with no further details, which is not very useful for the reader. Also, this seems to be a fairly biased list, with contributions mostly from the process systems engineering (PSE) community and many papers co-authored by the authors of this work. I recommend selecting a more representative set of papers from a wider range of fields, considering that the topic addressed here is of interest to more than just the PSE community.
Experimental design
label_ed_4
The proposed approach is sound and it makes natural sense to divide the work process of the parser into three parts: objective function, constraints, and variables. However, I have some questions that I hope the authors could answer in their response or address in the revised manuscript: 1. The authors state that the parser can handle Greek letters. How about variables that consist of a Greek and a Latin letter, e.g. Delta t? 2. How does the parser handle superscripts? Does the parser differentiate between superscripts and exponents? 3. In the literature, summations are often defined over sets instead of explicit conditions, e.g. sumlimits_{i in K} with K being a subset of the full-cardinality set I. Can the parser handle this case? 4. Looking at the example in line 347, it seems to be possible to use subsets for constraint generation. How are these subsets defined as these definitions usually do not explicitly appear in the LaTeX formulation of an optimization model? Is this information possibly directly extracted from the .dat file?
Validity of the findings
The validity of the proposed approach is nicely demonstrated in an illustrative example. However, some information on the platform’s ability to detect errors in the LaTeX formulation would be useful. For example, in the illustrative parsing example, what happens if in one of the constraints, the user forgot to write one of the two indices of the variable x? Moreover, I personally would welcome a discussion on the challenges of extending this platform to the nonlinear case.
Cite this review as
Anonymous Reviewer ( 2018 ) Peer Review #2 of "An integrated platform for intuitive mathematical programming modeling using LaTeX (v0.1)" . PeerJ Computer Science https://doi.org/10.7287/peerj-cs.161v0.1/reviews/2 Download Original Submission (PDF)
- submitted Jun 3, 2018 All text and materials provided via this peer-review history page are made available under a Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.
About us - PeerJ team | Our publications | Benefits | Partnerships | Endorsements Awards Resources - FAQ | Careers | Pressroom | Terms of use | Privacy | Contact Academic boards - Advisors | Editors | Subject areas Follow us - PeerJ blog | Twitter | Facebook | LinkedIn | Pinterest Submission guides - PeerJ – Life and Environment | PeerJ Computer Science | PeerJ Chemistry Spread the word - Activities | Resources PeerJ feeds - Atom | RSS 1.0 | RSS 2.0 | JSON PeerJ Computer Science feeds - Atom | RSS 1.0 | RSS 2.0 | JSON Archives - PeerJ – Life and Environment | PeerJ Computer Science
©2012-2019 PeerJ, Inc | Public user content licensed CC BY 4.0 unless otherwise specified. PeerJ ISSN: 2167-8359 PeerJ Comput. Sci. ISSN: 2376-5992 PeerJ Preprints ISSN: 2167-9843
computer science
