Review History for PopAlu: population-scale detection of Alu polymorphisms [PeerJ]
PeerJ Journals Peer-reviewed PeerJ – the Journal of Life & Environmental Sciences PeerJ Computer Science PeerJ Physical Chemistry PeerJ Organic Chemistry PeerJ Inorganic Chemistry PeerJ Analytical Chemistry PeerJ Materials Science Preprints PeerJ Preprints Visit PeerJ.org and get involved About PeerJ Journals Overview PeerJ Journals FAQ What we publish 5 Years publishing Solutions for authors Reputation High quality peer review Fast publishing Indexing and Impact Factor Global readership Feature comparison Reduced cost publishing Author feedback Early career researcher benefits Senior researcher benefits Open review (optional) Rebuttal letters Sections About the journal Sections Aquatic Biology Biochemistry, Biophysics and Molecular Biology Biodiversity and Conservation Bioinformatics and Genomics Brain and Cognition Ecology Environmental Science Microbiology Paleontology and Evolutionary Science Plant Biology Zoological Science About PeerJ Journals Overview PeerJ Journals FAQ What we publish 5 Years publishing Solutions for authors Reputation High quality peer review Fast publishing Indexing and Impact Factor Global readership Feature comparison Reduced cost publishing Author feedback Early career researcher benefits Senior researcher benefits Open review (optional) Rebuttal letters More Subjects Search articles Advanced search of articles & preprints PeerJ - Medicine articles PeerJ - Biology & Life science articles PeerJ Computer Science PeerJ Preprints Table of contents Table of Contents - current and archives PeerJ - Medicine articles PeerJ - Biology & Life science articles PeerJ - Environmental Science articles PeerJ - General bio (stats, legal, policy, edu) PeerJ Computer Science PeerJ Preprints Academic advisors Volunteer to review Collections Job listings Discussions Blog Institutional plans Reviews and awards Spread the word Who are we? Contact Login AUTHORS Peer Journals Overview Submission Guidelines Subject Areas Editorial Board Editorial Criteria Pricing General FAQ Computer Science FAQ Aims and Scope Author Interviews Policies and Procedures SUBMIT ARTICLE
Review History PopAlu: population-scale detection of Alu polymorphisms To increase transparency, PeerJ operates a system of 'optional signed reviews and history'. This takes two forms: (1) peer reviewers are encouraged, but not required, to provide their names (if they do so, then their profile page records the articles they have reviewed), and (2) authors are given the option of reproducing their entire peer review history alongside their published article (in which case the complete peer review process is provided, including revisions, rebuttal letters and editor decision letters). New to public reviews? Learn more about optional signed reviews and how to write a better rebuttal letter .
Summary
The initial submission of this article was received on June 12th, 2015 and was peer-reviewed by 2 reviewers and the Academic Editor. The Academic Editor made their initial decision on July 14th, 2015. The first revision was submitted on August 12th, 2015 and was reviewed by 2 reviewers and the Academic Editor. The article was Accepted by the Academic Editor on September 4th, 2015.
label_version_1
Version 0.2 (accepted)
Sven Rahmann
·
Sep 4, 2015
label_recommendation_1
·
Academic Editor
Accept
The revisions resolve the questions or misunderstandings that the reviewers have had, and the paper is well written and readable.
label_author_1
Alexander Schönhuth ·
Sep 4, 2015
Basic reporting
label_br_1
"The mentioned tools focus on insertions of novel sequences, sequences that are not present anywhere in the reference genome, unlike Alu and other repetitive sequences." Yes, of course, I know all of those papers. My feeling was that it could be helpful to write one or two lines pointing out the differences between the challenges that Alu insertion discovery faces, and the challenges of novel (or also generic) insertion discovery.
Experimental design
label_ed_1
"Three sigma (the 99.7 percentile) is commonly treated as near certainty in statistics (see for example Wikipedia -> ‘three-sigma rule’)." Yes, of course. I knew the 3-sigma-rule even before Wikipedia existed. I also knew that you should be careful in applying it when applying it multiple times. I had formulated my question too sloppily. I was wondering whether the 3-sigma threshold is a good choice also in view of applying this multiple times, hence you may have a (virtual) multiple testing issue here. In other words, I was asking whether 3 sigma was also a good choice in relation to the number of tests you perform. But in the meantime, I think that this does not play much of a role here, if you choose your support(p) threshold carefully -- and your method makes good results with the one you choose. --- "In cases where there occurs no target site duplication, no deletion and no novel sequence insertion along with an Alu insertion, the insertion position for the left end of the Alu equals the insertion position for the right end, i. e. AL equals AR. In the Alu deletion problem AL is never equal to AR." Thanks, I had had a misunderstanding about the definition of AL, AR.
Validity of the findings
label_votf_1
One comment about Mobster: we are using it for genotyping (which works based on logistic regression), but this may not be publicly available yet.
Cite this review as
Schönhuth A ( 2015 ) Peer Review #1 of "PopAlu: population-scale detection of Alu polymorphisms (v0.2)" . PeerJ https://doi.org/10.7287/peerj.1269v0.2/reviews/1
label_author_2
Tobias Marschall ·
Aug 21, 2015
Basic reporting
label_br_2
No Comments.
Experimental design
label_ed_2
No Comments.
Validity of the findings
label_votf_2
No Comments.
Comments for the author
label_cfta_2
In the revised version, the authors have addressed all my concerns. Cite this review as
Marschall T ( 2015 ) Peer Review #2 of "PopAlu: population-scale detection of Alu polymorphisms (v0.2)" . PeerJ https://doi.org/10.7287/peerj.1269v0.2/reviews/2 Download Version 0.2 (PDF)
Download author's rebuttal letter
- submitted Aug 12, 2015
label_version_2
Version 0.1 (original submission)
Sven Rahmann
·
Jul 14, 2015
label_recommendation_2
·
Academic Editor
Minor Revisions
Both reviewers ask several questions about certain details of the paper, and I assume that they can be easily answered and the paper clarified accordingly. As for the comparison against Mobster, it would be interesting to do it or (if really not applicable) explain why not.
label_author_3
Alexander Schönhuth ·
Jul 6, 2015
Basic reporting
label_br_3
Overall, the paper is very well written, and a pleasure to read. I believe that the reader would appreciate two or three sentences on these questions: What distinguishes Alu polymorphism discovery from deletion and insertion discovery in general? What, consequently, would be the drawbacks of methods such as NovelSeq (Hajirasouliha et al.), MindTheGap (Rizk et al.) or PopIns for detecting Alu insertions? Of course, Alu polymorphism discovery is special because of the existence of repeat databases, against which one can map the reads, but you do not really mention this in the Introduction. A minor remark: in the first sentence of the abstract, what exactly do you want to communicate with 'combined'? Do you just mean 'together'?
Experimental design
label_ed_3
In general, the experimental design is very neat. I appreciate in particular to transform Alu insertion discovery into an Alu deletion problem, by inserting potential insertions and to re-align, which looks novel to me (is it?) A few minor things: - What is the motivation/intuition behind the formula in line 117, page 4? [P(H_0|G_1)] - page 5, Figure 2: it would be helpful if you could also illustrate la and ra reads, as described from line 136 on page 5. - page 5, lines 143/144: What's the reasoning behind choosing these intervals (why exactly 3 sigma)? - page 5: the procedures described on lines 150 till 163 (region forming) are irreproducible (hence do not adhere to PeerJ standards). What about a description of these heuristics in a supplementary file? - page 5, lines 167/168: Figure 3 isn't really a helpful illustration of TSD's (and the corresponding issues) - page 6, line 177: why should AL be equal to AR at all?
Validity of the findings
label_votf_3
Overall, the results look sound and convincing. In general, I think that PopAlu makes a convincing tool! One (somewhat bigger) question though: a comparison with Mobster is missing. We (as members of the Genome of the Netherlands consortium) believe that this is a state-of-the-art tool, possibly the best one currently available. If there no real reasons why a comparison does not make sense, please compare also with Mobster -- I argue that this is a necessity to really understand the value of your tool in terms of practical benefits.
Comments for the author
label_cfta_3
See my comments above, they also should serve as general comments. Cite this review as
Schönhuth A ( 2015 ) Peer Review #1 of "PopAlu: population-scale detection of Alu polymorphisms (v0.1)" . PeerJ https://doi.org/10.7287/peerj.1269v0.1/reviews/1
label_author_4
Tobias Marschall ·
Jul 10, 2015
Basic reporting
label_br_4
No comments.
Experimental design
label_ed_4
In general, the methods and experiments are described very clearly. However, there are three aspects where some additional details would aid understandability and reproducibility (without having to reverse engineer them from the provided software implementation, which is probably possible): 1) How does the heuristic partitioning mentioned on Page 5 (lines 155 and 163) work? 2) How is the consensus Alu sequence (mentioned on Page 6, lines 193 and 200) chosen? In my understanding, you use exactly ONE Alu sequence, right? Wouldn't it be helpful to use a collection, i.e. a complete "mobiome", as done by Mobster? 3) Page 6, Line 180: what exactly does "unambiguously determined" mean in this context?
Validity of the findings
label_votf_4
- Making the simulated benchmark data available to the community would be helpful. - Page 6: The description of SimIns is a bit ambiguous to me. You first say that the Alu elements where inserted back into the reduced reference (Line 208), presumably at the places they where deleted from, and then say that the Alu locations were chosen randomly (Line 212). Actually, wouldn't it be simpler to simulate just one data set and run it twice, once in "deletion/genotyping mode" using the full reference and once in "insertion/discovery mode" using a reduced reference? That would have the added benefit of showing whether performance correlates between the two experiments (e.g. some MEIs don't work in both settings because read mappability is poor in that region).
Comments for the author
This is a nice paper that complements the yet rather sparse literature on mobile element discovery/genotyping. I've collected some minor comments/suggestions below: - Discovery of deletions of known ALUs is the same thing as genotyping, right? I would point that out a bit more explicitly in the intro. - In my opinion, referring to your H_0 and H_1 as "alleles" rather than "haplotypes" would fit better, because you are only talking about a single locus. - Section read classification: Could be clarified a bit more. From the description of category "I" for instances, it is not immediately clear to me why r_8 belongs to I while r_6 does not. Is "is mapped to" (Line 98/99) equivalent to "the alignment overlaps with"? - Page 4, Line 117: Motivating the choice of P(H_0|G_1) would be good. - Page 6, Line 192: The grammar of this sentence seems odd. - Page 6, paragraph on voting system: I think the manuscript could benefit from a figure explaining this voting system. Cite this review as
Marschall T ( 2015 ) Peer Review #2 of "PopAlu: population-scale detection of Alu polymorphisms (v0.1)" . PeerJ https://doi.org/10.7287/peerj.1269v0.1/reviews/2 Download Original Submission (PDF)
- submitted Jun 12, 2015 All text and materials provided via this peer-review history page are made available under a Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.
About us - PeerJ team | Our publications | Benefits | Partnerships | Endorsements Awards Resources - FAQ | Careers | Pressroom | Terms of use | Privacy | Contact Academic boards - Advisors | Editors | Subject areas Follow us - PeerJ blog | Twitter | Facebook | LinkedIn | Pinterest Submission guides - PeerJ (life - bio - med) | Computer Science | Chemistry | PeerJ Preprints instructions Spread the word - Activities | Resources PeerJ feeds - Atom | RSS 1.0 | RSS 2.0 | JSON PeerJ Computer Science feeds - Atom | RSS 1.0 | RSS 2.0 | JSON PeerJ Preprint feeds - Atom | RSS 1.0 | RSS 2.0 | JSON Archives - PeerJ | PeerJ Computer Science | PeerJ Preprints
©2012-2019 PeerJ, Inc | Public user content licensed CC BY 4.0 unless otherwise specified. PeerJ ISSN: 2167-8359 PeerJ Comput. Sci. ISSN: 2376-5992 PeerJ Preprints ISSN: 2167-9843
bioinformatics genomics
