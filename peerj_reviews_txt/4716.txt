Review History for FluxPyt: a Python-based free and open-source software for 13C-metabolic flux analyses [PeerJ]
PeerJ Journals Peer-reviewed PeerJ – the Journal of Life & Environmental Sciences PeerJ Computer Science PeerJ Physical Chemistry PeerJ Organic Chemistry PeerJ Inorganic Chemistry PeerJ Analytical Chemistry PeerJ Materials Science Preprints PeerJ Preprints Visit PeerJ.org and get involved About PeerJ Journals Overview PeerJ Journals FAQ What we publish 5 Years publishing Solutions for authors Reputation High quality peer review Fast publishing Indexing and Impact Factor Global readership Feature comparison Reduced cost publishing Author feedback Early career researcher benefits Senior researcher benefits Open review (optional) Rebuttal letters Sections About the journal Sections Aquatic Biology Biochemistry, Biophysics and Molecular Biology Biodiversity and Conservation Bioinformatics and Genomics Brain and Cognition Ecology Environmental Science Microbiology Paleontology and Evolutionary Science Plant Biology Zoological Science About PeerJ Journals Overview PeerJ Journals FAQ What we publish 5 Years publishing Solutions for authors Reputation High quality peer review Fast publishing Indexing and Impact Factor Global readership Feature comparison Reduced cost publishing Author feedback Early career researcher benefits Senior researcher benefits Open review (optional) Rebuttal letters More Subjects Search articles Advanced search of articles & preprints PeerJ - Medicine articles PeerJ - Biology & Life science articles PeerJ Computer Science PeerJ Preprints Table of contents Table of Contents - current and archives PeerJ - Medicine articles PeerJ - Biology & Life science articles PeerJ - Environmental Science articles PeerJ - General bio (stats, legal, policy, edu) PeerJ Computer Science PeerJ Preprints Academic advisors Volunteer to review Collections Job listings Discussions Blog Institutional plans Reviews and awards Spread the word Who are we? Contact Login AUTHORS Peer Journals Overview Submission Guidelines Subject Areas Editorial Board Editorial Criteria Pricing General FAQ Computer Science FAQ Aims and Scope Author Interviews Policies and Procedures SUBMIT ARTICLE
Review History FluxPyt: a Python-based free and open-source software for 13 C-metabolic flux analyses To increase transparency, PeerJ operates a system of 'optional signed reviews and history'. This takes two forms: (1) peer reviewers are encouraged, but not required, to provide their names (if they do so, then their profile page records the articles they have reviewed), and (2) authors are given the option of reproducing their entire peer review history alongside their published article (in which case the complete peer review process is provided, including revisions, rebuttal letters and editor decision letters). New to public reviews? Learn more about optional signed reviews and how to write a better rebuttal letter .
Summary
The initial submission of this article was received on March 2nd, 2018 and was peer-reviewed by 2 reviewers and the Academic Editor. The Academic Editor made their initial decision on March 26th, 2018. The first revision was submitted on April 11th, 2018 and was reviewed by the Academic Editor. The article was Accepted by the Academic Editor on April 16th, 2018.
label_version_1
Version 0.2 (accepted)
Claus Wilke
·
Apr 16, 2018
label_recommendation_1
·
Academic Editor
Accept
Thank you for carefully addressing the reviewer comments. # PeerJ Staff Note - this decision was reviewed and approved by a PeerJ Section Editor covering this Section #
Download Version 0.2 (PDF)
Download author's rebuttal letter
- submitted Apr 11, 2018
label_version_2
Version 0.1 (original submission)
Claus Wilke
·
Mar 26, 2018
label_recommendation_2
·
Academic Editor
Minor Revisions
Both reviewers generally like your paper but have some concerns regarding the presentation of the work.
label_author_1
Reviewer 1 ·
Mar 24, 2018
Basic reporting
label_br_1
The technical details on "How-To" use the FluxPyt is clear in general (Suppl File 2), however there is still a bit more description required of the output files and figures the program generates. Another technical detail is the need of the folder name (where the models are stored) is needed - the authors mentioned that there is no need to enter this folder name in the path to run FluxPyt. However, at least, I needed to add the model directory as well to the path to run FluxPyt. Some text in the draft needs to be re-written, i.e., lines 33-36, 44-46, 79-81, 187-188 etc to make it a bit more clear.
Experimental design
label_ed_1
There are lot of .pckl files generated along with some standard txt, png and svg file formats. An additional supplementary file describing at least the most useful files will be helpful, for example, flux map is definitely useful for the end user and are there any other file formats and descriptions that needs to be mentioned about? The authors should walk through the order of the output files generated as the program runs through different phases. Either there should be a bit more introduction to EMU (elementary metabolite units) method or at least the authors should direct the reader(s) to Antoniewicz et. al's paper [PMC1994654] that describes EMU in detail. I see the reference citing the above article, but there should be a bit more stress, as Antoniewicz et. al's paper gives a very comprehensive description of the method. Also, did the authors try to compare FluxPyt to Metran (as Metran is from Antoniewicz/Stephanopoulos lab)? Flux standard deviation calculations are a bit unclear (lines 124-128) and might need a bit more explanation of the need and use of this method. Would this program be useful to run on non-stationary metabolic fluxes datasets too? How about the experiments with multiple tracers? Did the authors compare these datasets (i.e., multiple tracer experimental data) to OpenFlux as well? Since EMU framework seems to reduce the computational time, compared to traditional isotopomer methods, the authors should at least benchmark datasets with multiple tracers.
Validity of the findings
label_votf_1
Most of the programs like OpenFlux and Metran that are based on EMU framework, even though are free for academia and not-for-profit institutions, should still be run on MATLAB which is not free. FluxPyt is built on python framework and makes this MFA software, a truly open source. The program is relatively easy to use, however the authors did not make any comments on use with other operating systems, like *nix or macOS. They should clearly mention that it is not compatible for other OS, or if the work is in progress to accommodate other OS.
Comments for the author
label_cfta_1
The figures generated, ease of program will help other labs to use this program. However if there is a bit more description on how the output files can be used, it will be even more helpful. Cite this review as
Anonymous Reviewer ( 2018 ) Peer Review #1 of "FluxPyt: a Python-based free and open-source software for 13C-metabolic flux analyses (v0.1)" . PeerJ https://doi.org/10.7287/peerj.4716v0.1/reviews/1
label_author_2
Reviewer 2 ·
Mar 25, 2018
Basic reporting
label_br_2
The paper presents a python based software for 13C metabolic flux analysis. Through two case studies and comparison with other software, the authors demonstrate their software is able to generate valid results quantifying cell metabolism. The language is in general clear, and the figures and tables are supportive to the conclusions.
Experimental design
label_ed_2
Since this is a software paper, there is no experiment for this study.
Validity of the findings
label_votf_2
The authors have confirmed their software can reproduce MFA results that have been published previously.
Comments for the author
label_cfta_2
I have some questions for this software, and hope the authors can address these questions in their manuscript if necessary. 1. As a matter of fact, many researchers use python 2.7 for programming, do you know if your software can work well in both 2.7 and 3.4 releases. 2. If someone wants to use FluxPyt to study a cyanobacterium, will the flux map automatically create a Calvin cycle? Or the flux map template is only for heterotrophs? 3. It will be better if you can give a full list of metabolites and their abbreviations somewhere in the manuscript. Cite this review as
Anonymous Reviewer ( 2018 ) Peer Review #2 of "FluxPyt: a Python-based free and open-source software for 13C-metabolic flux analyses (v0.1)" . PeerJ https://doi.org/10.7287/peerj.4716v0.1/reviews/2 Download Original Submission (PDF)
- submitted Mar 2, 2018 All text and materials provided via this peer-review history page are made available under a Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.
About us - PeerJ team | Our publications | Benefits | Partnerships | Endorsements Awards Resources - FAQ | Careers | Pressroom | Terms of use | Privacy | Contact Academic boards - Advisors | Editors | Subject areas Follow us - PeerJ blog | Twitter | Facebook | LinkedIn | Pinterest Submission guides - PeerJ (life - bio - med) | Computer Science | Chemistry | PeerJ Preprints instructions Spread the word - Activities | Resources PeerJ feeds - Atom | RSS 1.0 | RSS 2.0 | JSON PeerJ Computer Science feeds - Atom | RSS 1.0 | RSS 2.0 | JSON PeerJ Preprint feeds - Atom | RSS 1.0 | RSS 2.0 | JSON Archives - PeerJ | PeerJ Computer Science | PeerJ Preprints
©2012-2019 PeerJ, Inc | Public user content licensed CC BY 4.0 unless otherwise specified. PeerJ ISSN: 2167-8359 PeerJ Comput. Sci. ISSN: 2376-5992 PeerJ Preprints ISSN: 2167-9843
bioinformatics genomics
